{
  "version": 3,
  "sources": ["../node_modules/osascript-tag/dist/index.js", "../src/search.tsx", "../src/hooks/useSearch.ts", "../src/components/SearchResultItem.tsx", "../src/hooks/useAppExists.ts", "../src/hooks/useDevonDB.ts"],
  "sourcesContent": ["\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ChildProcess = __importStar(require(\"child_process\"));\nfunction isTemplateString(value) {\n    return Array.isArray(value) && Object.prototype.hasOwnProperty.call(value, 'raw');\n}\nfunction buildString(strings, replacements) {\n    var result = '';\n    var totalStrings = strings.length;\n    for (var i = 0; i < totalStrings; i++) {\n        var value = i < totalStrings - 1 ? replacements[i] : '';\n        result += strings[i] + value;\n    }\n    return result.trim();\n}\nfunction runScript(strings, replacements, options) {\n    if (options === void 0) { options = {}; }\n    if (process.platform !== 'darwin') {\n        return Promise.reject(new Error('osascript-tag requires macOS'));\n    }\n    return new Promise(function (resolve, reject) {\n        var argv = options.argv || [];\n        var flags = [];\n        var script = buildString(strings, replacements);\n        var language = 'AppleScript';\n        if (options.language === 'JavaScript') {\n            language = options.language;\n            script = \"(function(...argv){\" + script + \"})(\" + argv.map(function (value) { return JSON.stringify(value); }) + \")\";\n        }\n        if (options.parse) {\n            flags = ['-s', 's'];\n        }\n        if (typeof options.flags === 'string') {\n            flags = ['-s', options.flags];\n        }\n        var child = ChildProcess.spawn('osascript', ['-l', language].concat(flags, ['-e', script]));\n        var errorString = '';\n        child.stderr.on('data', function (error) {\n            errorString += error.toString();\n        });\n        var dataString = '';\n        child.stdout.on('data', function (data) {\n            dataString += data.toString();\n        });\n        child.on('close', function () {\n            if (errorString) {\n                reject(errorString);\n            }\n            else {\n                var result = dataString;\n                if (options.parse) {\n                    try {\n                        result = JSON.parse(dataString);\n                    }\n                    catch (error) {\n                        reject(error);\n                    }\n                }\n                resolve(result);\n            }\n        });\n        child.on('error', function (error) {\n            reject(error);\n        });\n    });\n}\nfunction osascript(scriptOrOptions) {\n    var replacementsArray = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        replacementsArray[_i - 1] = arguments[_i];\n    }\n    if (isTemplateString(scriptOrOptions)) {\n        return runScript(scriptOrOptions, replacementsArray, {});\n    }\n    return function (script) {\n        var replacements = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            replacements[_i - 1] = arguments[_i];\n        }\n        return runScript(script, replacements, scriptOrOptions);\n    };\n}\nfunction execJXA(scriptOrOptions) {\n    var replacementsArray = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        replacementsArray[_i - 1] = arguments[_i];\n    }\n    if (isTemplateString(scriptOrOptions)) {\n        return runScript(scriptOrOptions, replacementsArray, {\n            language: 'JavaScript',\n        });\n    }\n    return function (strings) {\n        var replacements = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            replacements[_i - 1] = arguments[_i];\n        }\n        return runScript(strings, replacements, __assign({ language: 'JavaScript' }, scriptOrOptions));\n    };\n}\nosascript.jxa = execJXA;\nexports.jxa = execJXA;\nexports.default = osascript;\n", "import { getPreferenceValues, List } from \"@raycast/api\";\nimport { useState } from \"react\";\nimport useSearch from \"./hooks/useSearch\";\nimport SearchResultItem from \"./components/SearchResultItem\";\nimport useAppExists from \"./hooks/useAppExists\";\nimport useDevonDB from \"./hooks/useDevonDB\";\nimport { Preferences } from \"./types/Preferences\";\nimport { SearchResult } from \"./types/SearchResult\";\n\nconst search = () => {\n  const appExists = useAppExists();\n  const [query, setQuery] = useState(\"\");\n  const [databaseUUID, setDatabaseUUID] = useState(\"\");\n  const { isLoading, results } = useSearch(appExists, query, databaseUUID);\n  const { databasesAreLoading, databases } = useDevonDB(appExists);\n  const preferences = getPreferenceValues() as Preferences;\n\n  const mapResult = (result: SearchResult) => <SearchResultItem key={result.uuid} result={result} />;\n\n  const noApp = <List.EmptyView title=\"You need to have DEVONthink 3\" icon=\"devonthink-icon-small.png\" />;\n\n  return (\n    <List\n      isLoading={appExists.appExistsLoading || isLoading || databasesAreLoading}\n      searchBarPlaceholder=\"Search DEVONthink Database...\"\n      onSearchTextChange={setQuery}\n      searchBarAccessory={\n        <List.Dropdown tooltip=\"Select database\" onChange={setDatabaseUUID} storeValue>\n          <List.Dropdown.Item title=\"All databases\" value=\"\" />\n          <List.Dropdown.Section title=\"Specific database\">\n            {databases.map(({ name, uuid }) => (\n              <List.Dropdown.Item key={uuid} title={name} value={uuid} />\n            ))}\n          </List.Dropdown.Section>\n        </List.Dropdown>\n      }\n      isShowingDetail={preferences.searchIsShowingDetail && results.length > 0}\n      throttle\n    >\n      {appExists.appExists ? results.map(mapResult) : noApp}\n    </List>\n  );\n};\n\n// noinspection JSUnusedGlobalSymbols\nexport default search;\n", "import { useEffect, useState } from \"react\";\nimport { showToast, Toast } from \"@raycast/api\";\nimport { jxa } from \"osascript-tag\";\nimport { UseAppExists } from \"./useAppExists\";\nimport { SearchResult } from \"../types/SearchResult\";\nimport Style = Toast.Style;\n\ntype State = {\n  isLoading: boolean;\n  results: SearchResult[];\n};\n\nconst useSearch = ({ appExists }: UseAppExists, query: string, databaseUUID: string) => {\n  const [state, setState] = useState<State>({ isLoading: true, results: [] });\n\n  useEffect(() => {\n    if (!appExists || query.length === 0) {\n      setState((prev) => ({ ...prev, isLoading: false }));\n      return;\n    }\n\n    Promise.resolve()\n      .then(() => setState((prev) => ({ ...prev, isLoading: true })))\n      .then(() => searchInDEVONThink(databaseUUID, query))\n      .then((results) => setState((prev) => ({ ...prev, results })))\n      .catch(handleError)\n      .finally(() => setState((prev) => ({ ...prev, isLoading: false })));\n  }, [appExists, query, databaseUUID]);\n\n  return state;\n};\n\nexport default useSearch;\n\nconst searchInDEVONThink = async (databaseUUID: string, query: string) => {\n  // language=JavaScript\n  const resultsString = (await jxa({ parse: true })`\n      const DT = Application(\"DEVONthink 3\");\n\n      let results;\n\n      if (\"${databaseUUID}\" === \"\") {\n          results = DT.search('${query.replaceAll(\"'\", \"\\\\'\")}');\n      } else {\n          const database = DT.getRecordWithUuid(\"${databaseUUID}\");\n          results = DT.search('${query.replaceAll(\"'\", \"\\\\'\")}', {in: database});\n      }\n\n\n      if (results.length === 0) {\n          return \"[]\";\n      }\n\n      return JSON.stringify(results.slice(0, 20).map(result => result.properties()));\n  `) as string;\n\n  const results = JSON.parse(resultsString) as SearchResult[];\n\n  return results.sort((a, b) => b.score - a.score);\n};\n\nexport const handleError = (err: string) => {\n  console.log(err);\n  return showToast(Style.Failure, \"Failed to perform the operation\", err);\n};\n", "import { Action, ActionPanel, getPreferenceValues, List } from \"@raycast/api\";\nimport { Preferences, PropertyKey } from \"../types/Preferences\";\nimport { SearchResult } from \"../types/SearchResult\";\n\nconst SearchResultItem = ({ result }: { result: SearchResult }) => (\n  <List.Item\n    title={result.name}\n    icon={{ fileIcon: result.path }}\n    actions={\n      <ActionPanel>\n        <Action.Open title=\"Open in DEVONthink\" target={`x-devonthink-item://${result.uuid}`} />\n        <Action.Open title=\"Open in the default app\" target={result.path} />\n        <Action.CopyToClipboard title=\"Copy Item Link\" content={`x-devonthink-item://${result.uuid}`} />\n        <Action.CopyToClipboard\n          title=\"Copy Markdown Link\"\n          content={`[${result.name}](x-devonthink-item://${result.uuid})`}\n        />\n        <Action.Open title=\"Reveal in DEVONthink\" target={`x-devonthink-item://${result.uuid}?reveal=1`} />\n      </ActionPanel>\n    }\n    detail={\n      <List.Item.Detail\n        metadata={<List.Item.Detail.Metadata>{searchResultMetadataItems(result)}</List.Item.Detail.Metadata>}\n      />\n    }\n  />\n);\n\nexport default SearchResultItem;\n\nconst preferences: Preferences = getPreferenceValues();\n\nconst searchResultMetadataItems = (result: SearchResult) => {\n  const items = [\n    <MyLabel key=\"name\" propKey=\"propertyName\" title=\"Name\" text={result.name} />,\n    <TagList key=\"tags\" title=\"Tags\">\n      {result.tags.map((tag) => (\n        <Tag key={tag} text={tag} />\n      ))}\n    </TagList>,\n    <MyLink key=\"url\" propKey=\"propertyUrl\" title=\"URL\" text={getDomain(result.url)} target={result.url} />,\n    <MyLabel\n      key=\"creationDate\"\n      propKey=\"propertyCreationDate\"\n      title=\"Creation Date\"\n      text={prettyDate(result.creationDate)}\n    />,\n    <MyLabel\n      key=\"modificationDate\"\n      propKey=\"propertyModificationDate\"\n      title=\"Modification Date\"\n      text={prettyDate(result.modificationDate)}\n    />,\n    <MyLabel\n      key=\"openingDate\"\n      propKey=\"propertyOpeningDate\"\n      title=\"Opening Date\"\n      text={prettyDate(result.openingDate)}\n    />,\n    <MyLabel\n      key=\"additionDate\"\n      propKey=\"propertyAdditionDate\"\n      title=\"Addition Date\"\n      text={prettyDate(result.additionDate)}\n    />,\n    <MyLabel key=\"date\" propKey=\"propertyDate\" title=\"Date\" text={prettyDate(result.date)} />,\n    <MyLabel key=\"location\" propKey=\"propertyLocation\" title=\"Location\" text={result.location} />,\n    <MyLabel\n      key=\"size\"\n      propKey=\"propertySize\"\n      title=\"Size\"\n      text={\"\" + humanFileSize(result.size, preferences.useSIUnits)}\n    />,\n    <MyLabel key=\"score\" propKey=\"propertyScore\" title=\"Score\" text={\"\" + result.score} />,\n\n    <MyLabel key=\"type\" propKey=\"propertyType\" title=\"Type\" text={result.type} />,\n    <MyLabel key=\"kind\" propKey=\"propertyKind\" title=\"Kind\" text={result.kind} />,\n    <MyLink\n      key=\"referenceURL\"\n      propKey=\"propertyReferenceURL\"\n      title=\"Reference URL\"\n      text={getDomain(result.referenceURL)}\n      target={result.referenceURL}\n    />,\n    <MyLabel key=\"path\" propKey=\"propertyPath\" title=\"Path\" text={result.path} />,\n    <MyLabel key=\"filename\" propKey=\"propertyFilename\" title=\"Filename\" text={result.filename} />,\n    <MyLabel key=\"locationGroup\" propKey=\"propertyLocationGroup\" title=\"Location Group\" text={result.locationGroup} />,\n    <MyLabel key=\"mimeType\" propKey=\"propertyMimeType\" title=\"MIME Type\" text={result.mimeType} />,\n    <MyLabel key=\"unread\" propKey=\"propertyUnread\" title=\"Unread\" text={result.unread ? \"yes\" : \"no\"} />,\n\n    <MyLabel key=\"aliases\" propKey=\"propertyAliases\" title=\"Aliases\" text={result.aliases} />,\n    <MyLabel key=\"comment\" propKey=\"propertyComment\" title=\"Comment\" text={result.comment} />,\n    <MyLabel\n      key=\"numberOfHits\"\n      propKey=\"propertyNumberOfHits\"\n      title=\"Number of Hits\"\n      text={\"\" + result.numberOfHits}\n    />,\n    <MyLabel\n      key=\"annotationCount\"\n      propKey=\"propertyAnnotationCount\"\n      title=\"Annotation Count\"\n      text={\"\" + result.annotationCount}\n    />,\n    <MyLabel\n      key=\"characterCount\"\n      propKey=\"propertyCharacterCount\"\n      title=\"Character Count\"\n      text={\"\" + result.characterCount}\n    />,\n    <MyLabel key=\"rating\" propKey=\"propertyRating\" title=\"Rating\" text={\"\" + result.rating} />,\n    <MyLabel key=\"pageCount\" propKey=\"propertyPageCount\" title=\"Page Count\" text={\"\" + result.pageCount} />,\n    <MyLabel key=\"wordCount\" propKey=\"propertyWordCount\" title=\"Word Count\" text={\"\" + result.wordCount} />,\n    <MyLabel\n      key=\"attachmentCount\"\n      propKey=\"propertyAttachmentCount\"\n      title=\"Attachment Count\"\n      text={\"\" + result.attachmentCount}\n    />,\n    <MyLabel\n      key=\"numberOfDuplicates\"\n      propKey=\"propertyNumberOfDuplicates\"\n      title=\"Number of Duplicates\"\n      text={\"\" + result.numberOfDuplicates}\n    />,\n\n    <MyLabel key=\"tagType\" propKey=\"propertyTagType\" title=\"Tag Type\" text={result.tagType} />,\n    <MyLabel\n      key=\"attachedScript\"\n      propKey=\"propertyAttachedScript\"\n      title=\"Attached Script\"\n      text={result.attachedScript}\n    />,\n    <MyLabel key=\"class\" propKey=\"propertyClass\" title=\"Class\" text={result.class} />,\n\n    <MyLabel key=\"height\" propKey=\"propertyHeight\" title=\"Height\" text={\"\" + result.height} />,\n    <MyLabel key=\"width\" propKey=\"propertyWidth\" title=\"Width\" text={\"\" + result.width} />,\n    <MyLabel key=\"dpi\" propKey=\"propertyDpi\" title=\"DPI\" text={\"\" + result.dpi} />,\n\n    <MyLabel key=\"altitude\" propKey=\"propertyAltitude\" title=\"Altitude\" text={\"\" + result.altitude} />,\n    <MyLabel key=\"latitude\" propKey=\"propertyLatitude\" title=\"Latitude\" text={\"\" + result.latitude} />,\n    <MyLabel key=\"longitude\" propKey=\"propertyLongitude\" title=\"Longitude\" text={\"\" + result.longitude} />,\n\n    <MyLabel key=\"id\" propKey=\"propertyID\" title=\"ID\" text={\"\" + result.id} />,\n    <MyLabel key=\"uuid\" propKey=\"propertyUUID\" title=\"UUID\" text={result.uuid} />,\n    <MyLabel key=\"contentHash\" propKey=\"propertyContentHash\" title=\"Content Hash\" text={result.contentHash} />,\n\n    <MyLabel key=\"interval\" propKey=\"propertyInterval\" title=\"Interval\" text={\"\" + result.interval} />,\n    <MyLabel\n      key=\"numberOfReplicants\"\n      propKey=\"propertyNumberOfReplicants\"\n      title=\"Number of Replicants\"\n      text={\"\" + result.numberOfReplicants}\n    />,\n    <MyLabel key=\"batesNumber\" propKey=\"propertyBatesNumber\" title=\"Bates Number\" text={\"\" + result.batesNumber} />,\n    <MyLabel key=\"duration\" propKey=\"propertyDuration\" title=\"Duration\" text={\"\" + result.duration} />,\n    <MyLabel key=\"label\" propKey=\"propertyLabel\" title=\"Label\" text={\"\" + result.label} />,\n    <MyLabel key=\"state\" propKey=\"propertyState\" title=\"State\" text={result.state ? \"yes\" : \"no\"} />,\n    <MyLabel\n      key=\"excludeFromTagging\"\n      propKey=\"propertyExcludeFromTagging\"\n      title=\"Exclude from Tagging\"\n      text={result.excludeFromTagging ? \"yes\" : \"no\"}\n    />,\n    <MyLabel\n      key=\"stateVisibility\"\n      propKey=\"propertyStateVisibility\"\n      title=\"State Visibility\"\n      text={result.stateVisibility ? \"yes\" : \"no\"}\n    />,\n    <MyLabel\n      key=\"excludeFromWikiLinking\"\n      propKey=\"propertyExcludeFromWikiLinking\"\n      title=\"Exclude from Wiki Linking\"\n      text={result.excludeFromWikiLinking ? \"yes\" : \"no\"}\n    />,\n    <MyLabel\n      key=\"excludeFromClassification\"\n      propKey=\"propertyExcludeFromClassification\"\n      title=\"Exclude from Classification\"\n      text={result.excludeFromClassification ? \"yes\" : \"no\"}\n    />,\n    <MyLabel key=\"locking\" propKey=\"propertyLocking\" title=\"Locking\" text={result.locking ? \"yes\" : \"no\"} />,\n    <MyLabel key=\"indexed\" propKey=\"propertyIndexed\" title=\"Indexed\" text={result.indexed ? \"yes\" : \"no\"} />,\n    <MyLabel\n      key=\"excludeFromSeeAlso\"\n      propKey=\"propertyExcludeFromSeeAlso\"\n      title=\"Exclude from See Also\"\n      text={result.excludeFromSeeAlso ? \"yes\" : \"no\"}\n    />,\n    <MyLabel\n      key=\"excludeFromSearch\"\n      propKey=\"propertyExcludeFromSearch\"\n      title=\"Exclude from Search\"\n      text={result.excludeFromSearch ? \"yes\" : \"no\"}\n    />,\n  ].concat(createMetadataLabels({ propKey: \"propertyMetaData\", record: result.metaData }));\n\n  const orderKeys = preferences.orderSearchResultItemProperties.split(\",\").map((key) => key.trim().toLowerCase());\n  const ordered = [] as JSX.Element[];\n\n  orderKeys.forEach((key) => {\n    const index = items.findIndex((item) => item.key?.toString().toLowerCase() === key);\n    if (index < 0) {\n      return;\n    }\n\n    ordered.push(items[index]);\n    items[index] = <></>;\n  });\n\n  const leftovers = items.filter((item) => item.key !== null);\n\n  return ordered.concat(leftovers);\n};\n\nconst Label = List.Item.Detail.Metadata.Label;\nconst TagList = List.Item.Detail.Metadata.TagList;\nconst Tag = TagList.Item;\nconst Link = List.Item.Detail.Metadata.Link;\n\nconst MyLabel = ({ propKey, title, text }: { propKey: PropertyKey; title: string; text?: string }) => {\n  if (!preferences[propKey]) {\n    return null;\n  }\n\n  return preferences.hideEmptySearchResultItemProperties && !text ? null : <Label title={title} text={text} />;\n};\n\nconst MyLink = ({\n  propKey,\n  title,\n  text,\n  target,\n}: {\n  propKey: PropertyKey;\n  title: string;\n  text: string;\n  target?: string;\n}) => {\n  if (!preferences[propKey]) {\n    return null;\n  }\n\n  if (!preferences.hideEmptySearchResultItemProperties) {\n    return target ? (\n      <Link title={title} text={text} target={target} />\n    ) : (\n      <MyLabel propKey={propKey} title={title} text=\"No URL\" />\n    );\n  }\n\n  if (!target) {\n    return null;\n  }\n\n  return <Link title={title} text={text} target={target} />;\n};\n\nconst createMetadataLabels = ({ propKey, record }: { propKey: PropertyKey; record: Record<string, unknown> }) => {\n  if (!preferences[propKey]) {\n    return <></>;\n  }\n\n  if (record === null) {\n    return <></>;\n  }\n\n  return Object.entries(record).map(([key, value]) => {\n    const text = typeof value === \"string\" ? value : JSON.stringify(value);\n\n    return <Label key={key} title={key} text={text} />;\n  });\n};\n\nconst prettyDate = (date: string) => {\n  const dateObj = new Date(date);\n\n  return `${dateObj.toLocaleDateString()} ${dateObj.toLocaleTimeString()}`;\n};\n\nconst humanFileSize = (bytes: number, si = false, decimalPlaces = 1) => {\n  const thresh = si ? 1024 : 1000;\n\n  if (Math.abs(bytes) < thresh) {\n    return bytes + \" B\";\n  }\n\n  const units = si\n    ? [\"KiB\", \"MiB\", \"GiB\", \"TiB\", \"PiB\", \"EiB\", \"ZiB\", \"YiB\"]\n    : [\"kB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"];\n  let unitIndex = -1;\n  const r = 10 ** decimalPlaces;\n\n  do {\n    bytes /= thresh;\n    ++unitIndex;\n  } while (Math.round(Math.abs(bytes) * r) / r >= thresh && unitIndex < units.length - 1);\n\n  return bytes.toFixed(decimalPlaces) + \" \" + units[unitIndex];\n};\n\nconst getDomain = (url: string) => url.replace(/^[^:]+:\\/\\/([^/]+).*$/, \"$1\");\n", "import { useEffect, useState } from \"react\";\nimport { getApplications, open, showToast, Toast } from \"@raycast/api\";\n\nexport type UseAppExists = {\n  appExistsLoading: boolean;\n  appExists: boolean;\n};\n\nconst useAppExists = () => {\n  const [state, setState] = useState<UseAppExists>({ appExistsLoading: true, appExists: false });\n\n  useEffect(() => {\n    getApplications()\n      .then((apps) => apps.find((app) => app.name === \"DEVONthink 3\"))\n      .then((app) => setState({ appExistsLoading: false, appExists: app !== undefined }));\n  }, []);\n\n  useEffect(() => {\n    if (state.appExistsLoading) return;\n    if (state.appExists) return;\n\n    showToast({\n      style: Toast.Style.Failure,\n      title: \"DEVONthink 3 is not installed\",\n      primaryAction: {\n        title: \"Download app\",\n        onAction: (toast) => open(\"https://www.devontechnologies.com/apps/devonthink\").then(() => toast.hide()),\n      },\n    });\n  }, [state.appExistsLoading, state.appExists]);\n\n  return state;\n};\n\nexport default useAppExists;\n", "import { useEffect, useState } from \"react\";\nimport { UseAppExists } from \"./useAppExists\";\nimport { jxa } from \"osascript-tag\";\nimport { handleError } from \"./useSearch\";\n\ntype DevonDBs = {\n  databasesAreLoading: boolean;\n  databases: DevonDB[];\n};\n\ntype DevonDB = {\n  uuid: string;\n  name: string;\n};\n\nconst useDevonDB = ({ appExists }: UseAppExists) => {\n  const [state, setState] = useState<DevonDBs>({ databasesAreLoading: true, databases: [] });\n\n  useEffect(() => {\n    if (!appExists) {\n      setState((prev) => ({ ...prev, databasesAreLoading: false }));\n\n      return;\n    }\n\n    getDevonDBs()\n      .then((list) => setState((prev) => ({ ...prev, databases: list })))\n      .catch(handleError)\n      .finally(() => setState((prev) => ({ ...prev, databasesAreLoading: false })));\n  }, [appExists]);\n\n  return state;\n};\n\nexport default useDevonDB;\n\nconst getDevonDBs =\n  // language=JavaScript\n  async () =>\n    (await jxa({ parse: true })`\n        const DT = Application(\"DEVONthink 3\");\n\n        const databases = DT.databases();\n\n        return databases.map(db => ({\n            uuid: db.uuid(),\n            name: db.name()\n        }))\n    `) as DevonDB[];\n"],
  "mappings": "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",
  "names": ["require_dist", "__commonJSMin", "exports", "__assign", "t", "s", "i", "n", "p", "__importStar", "mod", "result", "k", "ChildProcess", "isTemplateString", "value", "buildString", "strings", "replacements", "totalStrings", "runScript", "options", "resolve", "reject", "argv", "flags", "script", "language", "child", "errorString", "error", "dataString", "data", "osascript", "scriptOrOptions", "replacementsArray", "_i", "execJXA", "search_exports", "__export", "search_default", "__toCommonJS", "import_api", "import_react", "import_react", "import_api", "import_osascript_tag", "Style", "useSearch", "appExists", "query", "databaseUUID", "state", "setState", "prev", "searchInDEVONThink", "results", "handleError", "useSearch_default", "resultsString", "a", "b", "err", "import_api", "import_jsx_runtime", "SearchResultItem", "result", "searchResultMetadataItems", "SearchResultItem_default", "preferences", "items", "MyLabel", "TagList", "tag", "Tag", "MyLink", "getDomain", "prettyDate", "humanFileSize", "createMetadataLabels", "orderKeys", "key", "ordered", "index", "item", "leftovers", "Label", "Link", "propKey", "title", "text", "target", "record", "value", "date", "dateObj", "bytes", "si", "decimalPlaces", "thresh", "units", "unitIndex", "r", "url", "import_react", "import_api", "useAppExists", "state", "setState", "apps", "app", "toast", "useAppExists_default", "import_react", "import_osascript_tag", "useDevonDB", "appExists", "state", "setState", "prev", "getDevonDBs", "list", "handleError", "useDevonDB_default", "import_jsx_runtime", "search", "appExists", "useAppExists_default", "query", "setQuery", "databaseUUID", "setDatabaseUUID", "isLoading", "results", "useSearch_default", "databasesAreLoading", "databases", "useDevonDB_default", "preferences", "mapResult", "result", "SearchResultItem_default", "noApp", "name", "uuid", "search_default"]
}
